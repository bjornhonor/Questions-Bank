// /backend/debug-questions.js
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const connectDB = require('./db');
const Question = require('./models/Question');

dotenv.config();
connectDB();

const debugQuestions = async () => {
  try {
    console.log('=== INICIANDO DEBUG DAS QUEST√ïES ===\n');
    
    // 1. Verificar total de quest√µes
    const totalQuestions = await Question.countDocuments();
    console.log(`üìä Total de quest√µes no banco: ${totalQuestions}\n`);
    
    if (totalQuestions === 0) {
      console.log('‚ùå NENHUMA QUEST√ÉO ENCONTRADA!');
      console.log('Execute: npm run seed para inserir as quest√µes\n');
      process.exit();
    }
    
    // 2. Mostrar algumas quest√µes de exemplo
    console.log('üìñ Primeiras 3 quest√µes:');
    const sampleQuestions = await Question.find().limit(3);
    
    sampleQuestions.forEach((q, index) => {
      console.log(`\n${index + 1}. ID: ${q._id}`);
      console.log(`   √Årea: ${q.area}`);
      console.log(`   T√≥pico: ${q.topic}`);
      console.log(`   Pergunta: ${q.questionText.substring(0, 100)}...`);
      console.log(`   Op√ß√µes: ${q.options.length}`);
      console.log(`   Anexos: ${q.attachments ? q.attachments.length : 0}`);
    });
    
    // 3. Verificar √°reas dispon√≠veis
    console.log('\nüìö √Åreas dispon√≠veis:');
    const areas = await Question.distinct('area');
    areas.forEach(area => {
      console.log(`   - ${area}`);
    });
    
    // 4. Testar busca por ID espec√≠fico
    console.log('\nüîç Testando busca por ID...');
    const firstQuestion = await Question.findOne();
    if (firstQuestion) {
      const foundById = await Question.findById(firstQuestion._id);
      if (foundById) {
        console.log(`‚úÖ Busca por ID funcionando! ID testado: ${firstQuestion._id}`);
      } else {
        console.log(`‚ùå Erro na busca por ID: ${firstQuestion._id}`);
      }
    }
    
    console.log('\n=== DEBUG CONCLU√çDO ===');
    process.exit();
    
  } catch (error) {
    console.error('‚ùå ERRO NO DEBUG:', error);
    process.exit(1);
  }
};

debugQuestions();